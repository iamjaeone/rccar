#include "main.h"
#include "gpt12.h"

static volatile unsigned int cntDelay = 0;
//
//IFX_INTERRUPT(IsrGpt2T6Handler, 0, ISR_PRIORITY_GPT2T6_TIMER);
//void IsrGpt2T6Handler (void)
//{
//    cntDelay++;
//    if (cntDelay == 100000)
//    {
//        LedToggle(RED);
//        cntDelay = 0;
//    }
//}

int beepCnt = 0;
int beepOnOff = 0;

IFX_INTERRUPT(IsrGpt1T3Handler, 0, ISR_PRIORITY_GPT1T3_TIMER);
void IsrGpt1T3Handler (void)
{
    if ((beepCnt < beepOnOff) || (beepOnOff == 1))
    {
        MODULE_P02.OUT.B.P3 ^= 1;
    }
    else if (beepCnt < beepOnOff * 2)
    {
        MODULE_P02.OUT.B.P3 = 0;
    }
    else
    {
        beepCnt = 0;
    }
    beepCnt++;
}

void setBeepCycle (int cycle)
{
    beepOnOff = cycle;
}

unsigned int getCnt ()
{
    return cntDelay;
}

void gpt1_init ()
{
    // GPT120: GPT1, GPT2 통합
    // T2~T6까지 있음
    // GPT1: T3 - Core / T2, T4 - Auxiliary
    // GPT2: T6 - Core / T5 - Auxiliary + Capture/Reload

    /**
     *  T3 Configuration
     */

    // Selects the basic clock for block GPT1 (얘는 코어인 T3CON에서만 수정 가능)
    // 기본 Clock 속도 설정 f_GPT = 100Mhz
    // 00B f_GPT/8
    // 01B f_GPT/4
    // 10B f_GPT/32
    // 11B f_GPT/16
    // BPS1은 GPT1의 1
    MODULE_GPT120.T3CON.B.BPS1 = 0x2;
    // Timer Mode 설정
    // 000B Timer Mode
    // 001B Counter Mode
//    010B Gated Timer Mode with gate active low
//    011B Gated Timer Mode with gate active high
//    100B Reload Mode
//    101B Capture Mode
//    110B Incremental Interface Mode (Rotation Detection Mode)
//    111B Incremental Interface Mode (Edge Detection Mode)
    MODULE_GPT120.T3CON.B.T3M = 0x0;
    // Count Up or Down / 0: UP 1: DOWN
    MODULE_GPT120.T3CON.B.T3UD = 0x1;
    // Timer 속도 설정 Clock base에 + 이 설정으로 각각 초당 몇 tick으로 할지
    MODULE_GPT120.T3CON.B.T3I = 0x5;
//     375 부터 Down Count => 0되면 Interreupt?
    MODULE_GPT120.T3.U = 375;

//    // Timer 동작 설정 Gated Timer Mode with gate active low
//    MODULE_GPT120.T2CON.B.T2M = 0x4;
//    // ???
//    MODULE_GPT120.T2CON.B.T2I = 0x7;
//    MODULE_GPT120.T2.U = 375;


    /* Initialize the interrupt */
    volatile Ifx_SRC_SRCR *src;
    src = (volatile Ifx_SRC_SRCR*) (&MODULE_SRC.GPT12.GPT12[0].T3);
    src->B.SRPN = ISR_PRIORITY_GPT1T3_TIMER;
    src->B.TOS = 0;
    src->B.CLRR = 1; /* clear request */
    MODULE_ASCLIN0.FLAGSENABLE.B.RFLE = 1;
    src->B.SRE = 1; /* interrupt enable */

    IfxGpt12_T3_run(&MODULE_GPT120, IfxGpt12_TimerRun_start);
}

void gpt2_init (void)
{
    // GPT2의 기본 클럭 설정(T6가 Core이기에 여기서만 설정 가능)
    MODULE_GPT120.T6CON.B.BPS2 = 0x0;

    // T6 Mode 설정
    MODULE_GPT120.T6CON.B.T6M = 0x0;
    // Up Down 설정
    MODULE_GPT120.T6CON.B.T6UD = 0x1;
    // Timer 속도 설정 Clock base에 + 이 설정으로 각각 초당 몇 tick으로 할지
    MODULE_GPT120.T6CON.B.T6I = 0x0;
    // Overflow/Underflow Enable?
    // State of T6 toggle latch is output on pin T6OUT ??
    // 이게 뭐임?
    MODULE_GPT120.T6CON.B.T6OE = 0x1;
    // Timer T6 Reload Mode Enable ?? 이건 또 뭐야 시발
//    0B Reload from register CAPREL Disabled
//    1B Reload from register CAPREL Enabled
    MODULE_GPT120.T6CON.B.T6SR = 0x1;


    MODULE_GPT120.T6.U = 250u;
//  Current reload value or Captured value ??
    // 위랑은 뭐가 다른거지?
    MODULE_GPT120.CAPREL.U = 250u;

    /* Initialize the interrupt */
    volatile Ifx_SRC_SRCR *src;
    src = (volatile Ifx_SRC_SRCR*) (&MODULE_SRC.GPT12.GPT12[0].T6);
    src->B.SRPN = ISR_PRIORITY_GPT2T6_TIMER;
    src->B.TOS = 0;
    src->B.CLRR = 1; /* clear request */
    src->B.SRE = 1; /* interrupt enable */

    IfxGpt12_T6_run(&MODULE_GPT120, IfxGpt12_TimerRun_start);
}

void gpt12_init ()
{
    IfxScuWdt_clearCpuEndinit(IfxScuWdt_getGlobalEndinitPassword());
    MODULE_GPT120.CLC.U = 0;
    IfxScuWdt_setCpuEndinit(IfxScuWdt_getGlobalEndinitPassword());

    gpt1_init();
    gpt2_init();
}
